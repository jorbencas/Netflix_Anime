import { useEffect, useState } from "react";
import Head from "next/head";
import AppLayout from "@/components/AppLayout";
import { ThemeProvider } from "@/context/ThemeContext.jsx";
import styles from "@/styles/Home.module.css";
import VideoTest from "@/components/VideoTest";

export default function Home() {
  const [anime, setAnime] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(false);
  const [page, setPage] = useState(1);
  const [totalPages, setTotalPages] = useState(1);
  const [search, setSearch] = useState("");
  const [searching, setSearching] = useState(false);
  const [searchingError, setSearchingError] = useState(false);
  const [searchingLoading, setSearchingLoading] = useState(false);
  const [searchingAnime, setSearchingAnime] = useState([]);
  const [searchingTotalPages, setSearchingTotalPages] = useState(1);

  useEffect(() => {
    fetch(`https://api.jikan.moe/v3/anime/${page}`)
      .then((res) => {
        return res.json();
      })
      .then((data) => {
        setAnime(data);
        setTotalPages(data.length);
        setLoading(false);
      })
      .catch((err) => {
        setError(true);
        setLoading(false);
      });
  }, [page]);

  useEffect(() => {
    if (searching) {
      fetch(`https://api.jikan.moe/v3/search/anime?q=${search}&page=1`)
        .then((res) => res.json())
        .then((data) => {
          setSearchingAnime(data.results);
          setSearchingTotalPages(data.last_page);
          setSearchingLoading(false);
        })
        .catch((err) => {
          setSearchingError(true);
          setSearchingLoading(false);
        });
    }
  }, [searching]);

  const handleSearch = (e) => {
    setSearch(e.target.value);
    setSearching(true);
    setSearchingLoading(true);
    setSearchingError(false);
    setSearchingAnime([]);
    setSearchingTotalPages(1);
  };

  const handlePage = (e) => {
    setPage(e.target.value);
    setLoading(true);
    setError(false);
    setAnime([]);
    setTotalPages(1);
  };

  const handleSearchPage = (e) => {
    setSearchingPage(e.target.value);
    setSearchingLoading(true);
    setSearchingError(false);
    setSearchingAnime([]);
    setSearchingTotalPages(1);
  };

  const handleSearchingPage = (e) => {
    setSearchingPage(e.target.value);
    setSearchingLoading(true);
    setSearchingError(false);
    setSearchingAnime([]);
    setSearchingTotalPages(1);
  };

  const handleSearching = (e) => {
    setSearching(true);
    setSearchingLoading(true);
    setSearchingError(false);
    setSearchingAnime([]);
    setSearchingTotalPages(1);
  };

  if (loading) {
    return <div>Loading...</div>;
  }
  console.log(anime);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />s
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ThemeProvider>
        <AppLayout>
          <VideoTest />
        </AppLayout>
      </ThemeProvider>
    </>
  );
}

export function HomeContent() {
  return (
    <div className={styles.container}>
      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{" "}
          <code className={styles.code}>pages/index.js</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>
    </div>
  );
}
